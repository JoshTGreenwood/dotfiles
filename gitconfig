[core]
  excludesfile = ~/.gitignore
  editor = "vim"
[user]
  email = joshua.t.greenwood@gmail.com
  name = Josh Greenwood
[branch]
  autosetuprebase = always
[rerere]
  enabled = true
[alias]
  st = status -s
  aa = add --all
  cv = commit -v
  ca = commit --amend
  can = commit --amend --no-edit
  fix = commit --fixup
  co = checkout
  cor = "! git checkout $( git recent | fzf)"
  cop = "! hub pr checkout $( hub pr list | selecta | tr -d '#')"
  fpush = push --force-with-lease

  # diffing
  d = "!f() { git diff --color $* | diff-so-fancy | less --tabs=4 -RFX; }; f"
  dc = !git d --cached

  # basic logging
  l = "!. ~/.githelpers.sh && pretty_git_log"
  r = !git l -n 30

  # interesting logging
  me = log --all --oneline --no-merges --author=joshua.t.greenwood@gmail.com
  today = !git me --since=00:00:00
  # See which commits are on your local branch that aren’t on the remote
  local = "! git fetch && git log --oneline origin/$(git rev-parse --abbrev-ref HEAD).."
  # See which commits are on the remote that aren’t on your local branch
  upstream = "! git fetch && git log --oneline ..origin/$(git rev-parse --abbrev-ref HEAD)"

  search-for-occurance-change = "!f() { query=\"$1\"; shift; git log -p -S\"$query\" \"$argv\"; }; f \"$argv\""
  search = "!f() { query=\"$1\"; shift; git log -p -G\"$query\" \"$argv\"; }; f \"$argv\""
  search-messages = "!f() { query=\"$1\"; shift; git log --grep=\"$query\" \"$argv\"; }; f \"$argv\""

  # list all the recent branches I've worked on
  recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"
[diff]
	compactionHeuristic = true
[diff "encrypted"]
  textconv = rails encrypted:show
  cachetextconv = false
[github]
	user = joshtgreenwood
[rebase]
	autosquash = true
[include]
  path = ~/.config/git/config.local
